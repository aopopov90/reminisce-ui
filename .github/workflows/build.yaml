name: Build and deploy

on:
  push:
    branches:
      - 'main'
      - 'feature/**'

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  build:
    environment: ${{ github.ref == 'refs/heads/main' && 'uat' || 'staging' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Git Version
        id: version
        uses: codacy/git-version@2.7.1

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ vars.WI_PROVIDER }}
          service_account: ${{ vars.GH_SA }}
          token_format: 'access_token'

      - uses: 'docker/login-action@v1'
        with:
          registry: ${{ vars.DOCKER_REPO_REGION }}-docker.pkg.dev
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - uses: actions/setup-node@v3
        with:
          node-version: 15

      - name: Npm build
        env:
          CI: false
        run: |-
          npm install
          npm run build

      - name: Docker build
        run: |-
          image=${{ vars.DOCKER_REPO_REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.DOCKER_REPO_NAME }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ steps.version.outputs.version }}
          docker build -t ${image} .
          docker push ${image}

      - name: Deploy to CloudRun
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ vars.DOCKER_IMAGE_NAME }}-${{ github.ref == 'refs/heads/main' && 'uat' || 'staging' }}
          image: ${{ vars.DOCKER_REPO_REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.DOCKER_REPO_NAME }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ steps.version.outputs.version }}
          env_vars: |
            API_URL=${{ vars.API_URL }}


      - name: Print CloudRun end-point
        run: 'curl "${{ steps.deploy.outputs.url }}"'